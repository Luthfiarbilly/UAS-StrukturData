// Definisi struktur ListNode
function ListNode(val, next = null) {
    this.val = val;
    this.next = next;
  }
  
  // Fungsi untuk membalikkan linked list
  function reverseList(head) {
    let prev = null;
    let current = head;
    let next = null;
  
    while (current !== null) {
      next = current.next; // Simpan node berikutnya
      current.next = prev; // Balikkan arah tautan
      prev = current;      // Pindahkan prev ke node saat ini
      current = next;      // Pindahkan current ke node berikutnya
    }
  
    return prev; // prev sekarang adalah head dari linked list yang dibalik
  }
  
  // Membangun linked list: 1 -> 2 -> 3 -> 4 -> 5
  const head = new ListNode(1);
  head.next = new ListNode(2);
  head.next.next = new ListNode(3);
  head.next.next.next = new ListNode(4);
  head.next.next.next.next = new ListNode(5);
  
  // Membalikkan linked list
  const reversedHead = reverseList(head);
  
  // Fungsi untuk mencetak nilai-nilai dalam linked list
  function printList(node) {
    let current = node;
    while (current !== null) {
      console.log(current.val);
      current = current.next;
    }
  }
  
  // Mencetak linked list yang dibalik
  printList(reversedHead);
  let current = reversedHead; 
while (current !== null) { 
    console.log(current.val); // Output: 5, 4, 3, 2, 1 
    current = current.next; 
}
  
